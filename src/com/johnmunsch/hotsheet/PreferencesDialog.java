/*
 * PreferencesDialog.java
 *
 * Created on March 30, 2001, 1:32 PM
 */
package com.johnmunsch.hotsheet;

import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import com.johnmunsch.rss.*;

/**
 *
 * @author  johnm
 */
class PreferencesDialog extends JCenterableDialog {
    static final int CANCEL_OPTION = JOptionPane.CANCEL_OPTION;
    static final int OK_OPTION = JOptionPane.OK_OPTION;
    
    int returnValue = CANCEL_OPTION;
    
    private ChannelStore mChannelStore = null;
    private ItemHistory mItemHistory = null;
    private DefaultListModel listModel = new DefaultListModel();

    /** Creates new form PreferencesDialog */
    public PreferencesDialog(java.awt.Frame parent, boolean modal, 
        ChannelStore channelStore, ItemHistory itemHistory) {

        super(parent, modal);
        initComponents();
        
        center(VS_PARENT);

        mChannelStore = channelStore;
        mItemHistory = itemHistory;

        // Add all the channels in the channel store to the channel list.
        Iterator i = mChannelStore.iterator();
        
        while (i.hasNext()) {
            listModel.addElement((Channel) i.next());
        }
        
        channelList.setModel(listModel);
        
        // Set the various fields.
        HSSettings settings = HSSettings.getInstance();
        
        useHTTPProxyCheckBox.setSelected(new Boolean(
            settings.getProperties().getProperty("http.proxySet", 
            "false")).booleanValue());
        
        addressField.setText(settings.getProperties().getProperty(
            "http.proxyHost", ""));
        portField.setText(settings.getProperties().getProperty(
            "http.proxyPort", ""));
        
        authenticationCheckBox.setSelected(new Boolean(
            settings.getProperties().getProperty("http.authSet",
            "false")).booleanValue());
        
        userNameField.setText(settings.getProperties().getProperty(
            "http.authName", ""));
        passwordField.setText(settings.getProperties().getProperty(
            "http.authPass", ""));
        
        updateEnabledStatus();
    }

    void loadChannelStore() {
        mChannelStore.clear();
        
        int numChannels = listModel.size();
        
        for (int i = 0; i < numChannels; i++) {
            mChannelStore.add((Channel) listModel.get(i));
        }
    }

    void updateSettings() {
        // Set the various properties.
        HSSettings settings = HSSettings.getInstance();
        
        // Properties for the Connection tab.
        settings.getProperties().setProperty("http.proxySet", 
            useHTTPProxyCheckBox.isSelected() ? "true" : "false");

        settings.getProperties().setProperty("http.proxyHost", 
            addressField.getText());
        settings.getProperties().setProperty(
            "http.proxyPort", portField.getText());
        
        settings.getProperties().setProperty("http.authSet",
            authenticationCheckBox.isSelected() ? "true" : "false");

        settings.getProperties().setProperty(
            "http.authName", userNameField.getText());
        settings.getProperties().setProperty(
            "http.authPass", passwordField.getText());
        
        // Properties for Options tab.
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        channelsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        channelList = new javax.swing.JList();
        AddButton = new javax.swing.JButton();
        RemoveButton = new javax.swing.JButton();
        urlComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        connectionsPanel = new javax.swing.JPanel();
        useHTTPProxyCheckBox = new javax.swing.JCheckBox();
        addressLabel = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        portLabel = new javax.swing.JLabel();
        portField = new javax.swing.JTextField();
        authenticationCheckBox = new javax.swing.JCheckBox();
        userNameLabel = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        optionsPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        OKButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setTitle("Preferences");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(0, 0));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(500, 400));
        channelsPanel.setLayout(new java.awt.GridBagLayout());

        channelsPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        channelsPanel.setPreferredSize(new java.awt.Dimension(0, 0));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 200));
        jScrollPane1.setViewportView(channelList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 200;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.8;
        channelsPanel.add(jScrollPane1, gridBagConstraints);

        AddButton.setText("Add...");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        channelsPanel.add(AddButton, gridBagConstraints);

        RemoveButton.setText("Remove");
        RemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 10);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        channelsPanel.add(RemoveButton, gridBagConstraints);

        urlComboBox.setEditable(true);
        urlComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "http://www.thevipersnest.com/backend/top_10_books.cfm", "http://betanews.com/mnn.php3", "http://www.dpreview.com/news/dpr.rdf", "http://www.fool.com/about/headlines/rss_headlines.asp", "http://freshmeat.net/backend/fm.rdf", "http://www.gamedev.net/xml", "http://www.javable.com/eng/rss.shtml", "http://www.LinuxNews.com/backend/weblog.rdf", "http://linuxtoday.com/backend/my-netscape.rdf", "http://www.pdabuzz.com/netscape.txt", "http://www.moreover.com/cgi-local/page?index_xml+rss", "http://www.slashdot.org/slashdot.rdf", "http://www.wired.com/news_drop/netcenter/netcenter.rdf", "http://www.xmlhack.com/rsscat.php" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(9, 10, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        channelsPanel.add(urlComboBox, gridBagConstraints);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Looking for more channels? Check out http://www.syndic8.com.");
        jLabel1.setMaximumSize(new java.awt.Dimension(784, 32));
        jLabel1.setPreferredSize(new java.awt.Dimension(784, 32));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 10, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        channelsPanel.add(jLabel1, gridBagConstraints);

        jTabbedPane1.addTab("Channels", channelsPanel);

        connectionsPanel.setLayout(new java.awt.GridBagLayout());

        connectionsPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        connectionsPanel.setPreferredSize(new java.awt.Dimension(0, 0));
        useHTTPProxyCheckBox.setText("Use HTTP Proxy");
        useHTTPProxyCheckBox.setBorder(new javax.swing.border.TitledBorder(""));
        useHTTPProxyCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useHTTPProxyCheckBoxActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        connectionsPanel.add(useHTTPProxyCheckBox, gridBagConstraints);

        addressLabel.setText("Address: ");
        addressLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        connectionsPanel.add(addressLabel, gridBagConstraints);

        addressField.setMinimumSize(new java.awt.Dimension(80, 20));
        addressField.setPreferredSize(new java.awt.Dimension(80, 20));
        addressField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        connectionsPanel.add(addressField, gridBagConstraints);

        portLabel.setText("Port: ");
        portLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        connectionsPanel.add(portLabel, gridBagConstraints);

        portField.setMinimumSize(new java.awt.Dimension(80, 20));
        portField.setPreferredSize(new java.awt.Dimension(50, 20));
        portField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        connectionsPanel.add(portField, gridBagConstraints);

        authenticationCheckBox.setText("Proxy requires authentication");
        authenticationCheckBox.setEnabled(false);
        authenticationCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authenticationCheckBoxActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        connectionsPanel.add(authenticationCheckBox, gridBagConstraints);

        userNameLabel.setText("User name: ");
        userNameLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        connectionsPanel.add(userNameLabel, gridBagConstraints);

        userNameField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        connectionsPanel.add(userNameField, gridBagConstraints);

        passwordLabel.setText("Password:");
        passwordLabel.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        connectionsPanel.add(passwordLabel, gridBagConstraints);

        passwordField.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        connectionsPanel.add(passwordField, gridBagConstraints);

        jTabbedPane1.addTab("Connections", connectionsPanel);

        jTabbedPane1.addTab("Options", optionsPanel);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jPanel1.setLayout(new java.awt.GridLayout());

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        jPanel1.add(OKButton);

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        jPanel1.add(CancelButton);

        jPanel2.add(jPanel1);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void authenticationCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authenticationCheckBoxActionPerformed
        updateEnabledStatus();
    }//GEN-LAST:event_authenticationCheckBoxActionPerformed

    private void useHTTPProxyCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useHTTPProxyCheckBoxActionPerformed
        updateEnabledStatus();
    }//GEN-LAST:event_useHTTPProxyCheckBoxActionPerformed

    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButtonActionPerformed
        // Go through all of the selected list items and remove them from the list model.
        int index = channelList.getSelectedIndex();
        listModel.remove(index);
    }//GEN-LAST:event_RemoveButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        Channel temp = new Channel((String) urlComboBox.getSelectedItem());
        temp.setItemHistory(mItemHistory);

        listModel.addElement(temp);
    }//GEN-LAST:event_AddButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        setVisible(false);
        dispose();
        
        returnValue = CANCEL_OPTION;
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        setVisible(false);
        dispose();

        updateSettings();
        
        returnValue = OK_OPTION;
    }//GEN-LAST:event_OKButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
        
        returnValue = CANCEL_OPTION;
    }//GEN-LAST:event_closeDialog

    private void updateEnabledStatus() {
        // If unchecked then disable all the proxy controls and if checked 
        // enable them all.
        boolean enable = useHTTPProxyCheckBox.isSelected();
        
        addressLabel.setEnabled(enable);
        addressField.setEnabled(enable);
        portLabel.setEnabled(enable);
        portField.setEnabled(enable);
        authenticationCheckBox.setEnabled(enable);

        if (!enable) {
            userNameLabel.setEnabled(false);
            userNameField.setEnabled(false);
            passwordLabel.setEnabled(false);
            passwordField.setEnabled(false);
        } else {
            // If unchecked then disable all the authen controls and if checked 
            // enable them all.
            enable = authenticationCheckBox.isSelected();

            userNameLabel.setEnabled(enable);
            userNameField.setEnabled(enable);
            passwordLabel.setEnabled(enable);
            passwordField.setEnabled(enable);
        }
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox authenticationCheckBox;
    private javax.swing.JTextField portField;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JLabel portLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel connectionsPanel;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton CancelButton;
    private javax.swing.JComboBox urlComboBox;
    private javax.swing.JTextField addressField;
    private javax.swing.JTextField userNameField;
    private javax.swing.JCheckBox useHTTPProxyCheckBox;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField passwordField;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPanel channelsPanel;
    private javax.swing.JButton AddButton;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JList channelList;
    // End of variables declaration//GEN-END:variables
}
